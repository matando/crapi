on:
  push:
    branches:
      - master
      - develop

#env:
 # ACTIVE_API_URL: "<ACTIVE_API_URL>"
 #ACTIVE_REGISTRY_URL: "<ACTIVE_REGISTRY_URL>"
 #ACTIVE_BACKEND_URI: "<ACTIVE_BACKEND_URI">

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      <RUN_YOUR_LOCAL_SERVER>

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ACTIVE_REGISTRY_URL }}
          username: ${{ secrets.ACTIVE_REGISTRY_USER }}
          password: ${{ secrets.ACTIVE_REGISTRY_PASSWORD }}

      - name: Active Testing Scan
        run: >
          docker run
          --add-host=host.docker.internal:host-gateway
          -e ACTIVE_CONFIG_FILE_PATH=<PATH_TO_ACTIVE_CONFIG_FILE>
          -e ACTIVE_BACKEND_URI={{ env.ACTIVE_BACKEND_URI }}
          -v $(pwd)/noname:<PATH_TO_CONFIG_DIRECTORY>
          ${{ env.ACTIVE_REGISTRY_URL }}/active-cli:$(curl -k ${{env.ACTIVE_API_URL}}/backend/version) scan
          --api-url=${{ env.ACTIVE_API_URL }}
          --api-token=${{ secrets.ACTIVE_API_TOKEN }}
          --test-group-<ACTIVE_TEST_GROUP_ID>
          --branch-name=${{ github.head_ref || github.ref_name }}
          --severity-threshold=<SEVERITY_THRESHOLD>

  deploy:
    needs: scan
    runs-on: ubuntu-latest
    steps:
      - name: echo
        run: echo Security scan passed, deploying to production

